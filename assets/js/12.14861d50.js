(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{360:function(s,t,e){s.exports=e.p+"assets/img/actor-position.1c227c8d.svg"},401:function(s,t,e){"use strict";e.r(t);var n=e(42),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"aktor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aktor"}},[s._v("#")]),s._v(" Aktor")]),s._v(" "),n("hr"),s._v(" "),n("h2",{attrs:{id:"grundlegendes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#grundlegendes"}},[s._v("#")]),s._v(" Grundlegendes")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Actor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("erstellt einen neuen Aktor. "),n("code",[s._v("bild")]),s._v(" ist der Name einer Bilddatei.")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("draw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("zeichnet den Aktor "),n("code",[s._v("nemo")]),s._v(" in das Fenster.")]),s._v(" "),n("h2",{attrs:{id:"position"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#position"}},[s._v("#")]),s._v(" Position")]),s._v(" "),n("p",[n("img",{attrs:{src:e(360),alt:"Positionierung in Pygame Zero"}})]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bottom\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("ist die y-Koordinate des unteren Rands von "),n("code",[s._v("nemo")]),s._v(".")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("ist die x-Koordinate des linken Rands von "),n("code",[s._v("nemo")]),s._v(".")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("ist die x-Koordinate des rechten Rands von "),n("code",[s._v("nemo")]),s._v(".")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("top\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("ist die y-Koordinate des oberen Rands von "),n("code",[s._v("nemo")]),s._v(".")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("ist die x-Koordinate des Ankers von "),n("code",[s._v("nemo")]),s._v(".")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("ist die y-Koordinate des Ankers von "),n("code",[s._v("nemo")]),s._v(".")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("angle\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("ist die Rotation von "),n("code",[s._v("nemo")]),s._v(" in Grad im Gegenuhrzeigersinn.")]),s._v(" "),n("h2",{attrs:{id:"kollision"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kollision"}},[s._v("#")]),s._v(" Kollision")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("collidepoint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("überprüft, ob "),n("code",[s._v("nemo")]),s._v(" mit dem Punkt mit den Koordinaten "),n("code",[s._v("x")]),s._v(", "),n("code",[s._v("y")]),s._v(" kollidiert.")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("collidepoint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("überprüft, ob "),n("code",[s._v("nemo")]),s._v(" mit dem Punkt mit den Punkt "),n("code",[s._v("pos")]),s._v(" kollidiert. So kann beispielsweise überprüft werden, ob ein Aktor mit der Maus angeklickt wird:")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("on_mouse_down")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("collidepoint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Nemo mit Maus berührt."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("colliderect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("überprüft, ob "),n("code",[s._v("nemo")]),s._v(" mit "),n("code",[s._v("dory")]),s._v(" kollidiert.")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("collidelist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("liste"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("überprüft, ob "),n("code",[s._v("nemo")]),s._v(" mit einem Aktor in der Liste "),n("code",[s._v("liste")]),s._v(" kollidiert. In dem Fall wird der Index des kollidierenden Aktors in der Liste zurückgeliefert. Wenn kein Aktor der Liste mit "),n("code",[s._v("nemo")]),s._v(" kollidiert, wird "),n("code",[s._v("-1")]),s._v(" zurückgeliefert.")]),s._v(" "),n("h2",{attrs:{id:"messung"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#messung"}},[s._v("#")]),s._v(" Messung")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("distance_to"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("misst die Distanz zwischen "),n("code",[s._v("nemo")]),s._v(" und "),n("code",[s._v("dory")]),s._v(".")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("nemo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("angle_to"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("misst den Winkel von "),n("code",[s._v("nemo")]),s._v(" aus in Richtung "),n("code",[s._v("dory")]),s._v(".")])])}),[],!1,null,null,null);t.default=a.exports}}]);