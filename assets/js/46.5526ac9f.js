(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{427:function(e,s,t){"use strict";t.r(s);var n=t(42),a=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"zeichenketten"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zeichenketten"}},[e._v("#")]),e._v(" Zeichenketten")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("Text als "),t("em",[e._v("Wert")]),e._v(" wird in Programmiersprachen normalerweise als "),t("strong",[e._v("Zeichenkette")]),e._v(" (engl. "),t("em",[e._v("string")]),e._v(") bezeichnet.")]),e._v(" "),t("h2",{attrs:{id:"darstellung"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#darstellung"}},[e._v("#")]),e._v(" Darstellung")]),e._v(" "),t("p",[e._v("Um in Python einen Text als Wert zu verwenden, wird dieser Text in einfache oder doppelte Anführungszeichen gesetzt:")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Dies ist ein Text."')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hallo, wie geht\'s."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("Dabei dürfen innerhalb der Anführungszeichen keine weiteren Anführungszeichen des gleichen Typs vorkommen. Zeilenumbrüche und andere spezeielle Zeichen sind ebenfalls nicht erlaubt. Um diese Restriktion zu umgehen, können sogenannte "),t("strong",[e._v("Escape-Sequenzen")]),e._v(" verwendet werden. Die untenstehende Tabelle listet die wichtigsten Escape-Sequenzen auf.")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Escape-Sequenz")]),e._v(" "),t("th",[e._v("Zeichen")]),e._v(" "),t("th",[e._v("Bedeutung")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("\\\\")])]),e._v(" "),t("td",[t("code",[e._v("\\")])]),e._v(" "),t("td",[e._v("Rückstrich")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("\\'")])]),e._v(" "),t("td",[t("code",[e._v("'")])]),e._v(" "),t("td",[e._v("einfaches Anführungszeichen")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v('\\"')])]),e._v(" "),t("td",[t("code",[e._v('"')])]),e._v(" "),t("td",[e._v("doppeltes Anführungszeichen")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("\\n")])]),e._v(" "),t("td"),e._v(" "),t("td",[e._v("Zeilenumbruch")])])])]),e._v(" "),t("p",[e._v("Beispielsweise wird der Text")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("A: Hallo, wie geht's?\nB: Gut, und dir?\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("so als Zeichenkette codiert:")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"A: Hallo, wie geht\'s?\\nB: Gut, und dir?"')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"operationen-mit-zeichenketten"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#operationen-mit-zeichenketten"}},[e._v("#")]),e._v(" Operationen mit Zeichenketten")]),e._v(" "),t("p",[e._v("Zwei Zeichenketten können zusammengehängt werden, indem ein "),t("code",[e._v("+")]),e._v("-Zeichen dazwischen platziert wird:")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Ford"')]),e._v("\nquery "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hallo "')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('", wie geht\'s?"')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("Mit dem sogenannten Index-Operator "),t("code",[e._v("[i]")]),e._v(" kann auf einen Teil einer Zeichenkette zugegriffen werden. Der Operator liefert das Zeichen an der Position "),t("code",[e._v("i")]),e._v(" zurück. In den Klammern muss eine ganze Zahl "),t("code",[e._v("i")]),e._v(" stehen. Die Position des ersten Zeichens ist 0. Wird eine negative Zahl als Index angegeben, so wird diese Zahl erst von der Länge der Zeichenkette subtrahiert und das Ergebnis als Index verwendet.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Python"')]),e._v("\n\ns "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# s: "P"')]),e._v("\nt "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# t: "y"')]),e._v("\nu "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# u: "n"')]),e._v("\nv "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# v: "P"')]),e._v("\nw "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# w: "n"')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("Im Index-Operator kann mit der Form "),t("code",[e._v("[a:b]")]),e._v(" auch ein Bereich angegeben werden. In diesem Falll wird die Teilzeichenkette zurückgeliefert, welche mit dem "),t("code",[e._v("a")]),e._v("-ten Zeichen beginnt und mit dem "),t("code",[e._v("b-1")]),e._v("-ten Zeichen endet. Die Zahlen "),t("code",[e._v("a")]),e._v(" und "),t("code",[e._v("b")]),e._v(" können auch negativ sein oder ganz weggelassen werden. Ein fehlender Anfangsindex wird durch 0 ersetzt, ein fehlender Endindex durch die Länge der Zeichenkette.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Python"')]),e._v("\n\ns "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# s: "Pyt"')]),e._v("\nt "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# t: "thon"')]),e._v("\nu "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# u: "Pyth"')]),e._v("\nv "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# v: "ytho"')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h2",{attrs:{id:"ist-eine-zeichenkette-in-einer-anderen-zeichenkette-enthalten"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ist-eine-zeichenkette-in-einer-anderen-zeichenkette-enthalten"}},[e._v("#")]),e._v(" Ist eine Zeichenkette in einer anderen Zeichenkette enthalten?")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" s\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("überprüft, ob "),t("code",[e._v("t")]),e._v(" in "),t("code",[e._v("s")]),e._v(" vorkommt.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hallo Welt"')]),e._v("\nt "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"all"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"\'"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" t "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"' ist in '\"")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"\' enthalten."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"\'"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" t "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"' ist nicht in '\"")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"\' enthalten."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("find"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("liefert die erste Position zurück, an welcher "),t("code",[e._v("t")]),e._v(" in "),t("code",[e._v("s")]),e._v(" vorkommt. Liefert "),t("code",[e._v("-1")]),e._v(" zurück, falls "),t("code",[e._v("t")]),e._v(" nicht in "),t("code",[e._v("s")]),e._v(" vorkommt.")]),e._v(" "),t("h2",{attrs:{id:"eingebaute-funktionen-fur-zeichenketten"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eingebaute-funktionen-fur-zeichenketten"}},[e._v("#")]),e._v(" Eingebaute Funktionen für Zeichenketten")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("liefert die Länge der Zeichenkette "),t("code",[e._v("s")]),e._v(" zurück.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("str")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("erzeugt eine Zeichenkette aus einem beliebigen Wert, beispielsweise einer Zahl.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Ford"')]),e._v("\nsay "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Der Name "')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('" besteht aus "')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("str")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('" Buchstaben."')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("chr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("liefert das Zeichen zurück, welches die Unicode-ID "),t("code",[e._v("u")]),e._v(" hat. Das folgende Skript gibt «Preise in €» aus:")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Preise in "')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("chr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8364")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("ord")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("liefert die Unicode-ID des Zeichens "),t("code",[e._v("c")]),e._v(" zurück.")]),e._v(" "),t("h2",{attrs:{id:"objektfunktionen-fur-zeichenketten"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#objektfunktionen-fur-zeichenketten"}},[e._v("#")]),e._v(" Objektfunktionen für Zeichenketten")]),e._v(" "),t("p",[e._v("Zeichenketten-Werte stellen weitere Funktionen zu Verfügung:")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("liefert Anzahl Vorkommen von "),t("code",[e._v("t")]),e._v(" in "),t("code",[e._v("s")]),e._v(" zurück.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("endswith"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("überprüft, ob die Zeichenkette "),t("code",[e._v("s")]),e._v(" mit "),t("code",[e._v("t")]),e._v(" endet.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("isalpha"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("überprüft, ob die Zeichenkette ausschliesslich aus Buchstaben besteht.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("isdecimal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("überprüft, ob die Zeichenkette ausschliesslich aus Dezimalziffern besteht.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("islower"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("überprüft, ob die Zeichenkette ausschliesslich aus Kleinbuchstaben besteht.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("isupper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("überprüft, ob die Zeichenkette ausschliesslich aus Grossbuchstaben besteht.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("lower"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("liefert eine Kopie von "),t("code",[e._v("s")]),e._v(" zurück, bei welcher alle grosse durch kleine Buchstaben ersetzt werden.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("replace"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("ersetzt alle Vorkommen von "),t("code",[e._v("old")]),e._v(" in "),t("code",[e._v("s")]),e._v(" durch "),t("code",[e._v("new")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("upper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("liefert eine Kopie von "),t("code",[e._v("s")]),e._v(" zurück, bei welcher alle kleine durch grosse Buchstaben ersetzt werden.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("split"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("sep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("teilt die Zeichenkette "),t("code",[e._v("s")]),e._v(" mit dem Trenner "),t("code",[e._v("sep")]),e._v(" auf. Es wird eine Liste der Teil-Zeichenketten zurückgeliefert.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("namen "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Anna,Barbara,Claire"')]),e._v("\nnamenliste "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" namen"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("split"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('","')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# namenliste: ["Anna", "Barbara", "Claire"]')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("sep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("join"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("list")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("fügt die Liste von Zeichenketten "),t("code",[e._v("list")]),e._v(" mit dem Trenner "),t("code",[e._v("sep")]),e._v(" zusammen. Die Funktion liefert die resultierende Zeichenkette zurück.")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("namenliste "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Anna"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Barbara"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Claire"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\nnamen "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('","')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("join"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("namenliste"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# namen: "Anna,Barbara,Claire"')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);