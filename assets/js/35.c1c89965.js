(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{417:function(e,t,a){"use strict";a.r(t);var n=a(42),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"wahrheitswerte"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wahrheitswerte"}},[e._v("#")]),e._v(" Wahrheitswerte")]),e._v(" "),a("hr"),e._v(" "),a("p",[e._v("Eine Aussage wie «Die Sonne scheint» ist entweder "),a("strong",[e._v("wahr")]),e._v(" oder "),a("strong",[e._v("falsch")]),e._v(". In der Sprache der Logik und Mathematik sagt man, dass der Aussage ein "),a("strong",[e._v("Wahrheitswert")]),e._v(" zugeordnet wird.")]),e._v(" "),a("p",[e._v("In der Informatik spricht man auch von "),a("strong",[e._v("booleschen Werten")]),e._v(" (engl. "),a("em",[e._v("Boolean values")]),e._v(" nach dem Mathematiker George Boole). Das Rechnen mit boolschen Werten spielt in der Informatik eine zentrale Rolle beim Design von Computerchips sowie bei der Codierung von Informationen.")]),e._v(" "),a("p",[e._v("In Python heissen die zwei Wahrheitswerte")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("True")]),e._v(" (wahr) und")]),e._v(" "),a("li",[a("code",[e._v("False")]),e._v(" (falsch).")])]),e._v(" "),a("p",[e._v("Beim Programmieren werden Wahrheitswerte vor allem für die Steuerung des Programmflusses eingesetzt. Wahrheitswerte entstehen")]),e._v(" "),a("ul",[a("li",[e._v("durch den "),a("strong",[e._v("Vergleich")]),e._v(" von Werten, z.B. «Der Wert der Variable "),a("code",[e._v("x")]),e._v(" ist grösser als 5»,")]),e._v(" "),a("li",[e._v("durch die "),a("strong",[e._v("Kombination")]),e._v(" von Wahrheitswerten, z.B. «die Taste «W» ist gedrückt "),a("strong",[e._v("und")]),e._v(" "),a("code",[e._v("vx")]),e._v(" ist kleiner als 10» oder")]),e._v(" "),a("li",[e._v("indem ein anderer Wert, zB. eine Zahl von Python automatisch als Wahrheitswert interpretiert wird.")])]),e._v(" "),a("h2",{attrs:{id:"vergleiche"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vergleiche"}},[e._v("#")]),e._v(" Vergleiche")]),e._v(" "),a("p",[e._v("In Python können Werte auf folgende Arten verglichen werden:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Vergleich")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Mathematisch")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Python")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("kleiner als")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("$a < b$")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("a < b")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("kleiner als oder gleich")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("$a \\leq b$")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("a <= b")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("grösser als")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("$a > b$")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("a > b")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("grösser als oder gleich")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("$a \\geq b$")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("a >= b")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("gleich")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("$a = b$")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("a == b")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("nicht gleich")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("$a \\neq b$")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("a != b")])])])])]),e._v(" "),a("p",[e._v("::: box warning")]),e._v(" "),a("h4",{attrs:{id:"gleichheit-und-zuweisung"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gleichheit-und-zuweisung"}},[e._v("#")]),e._v(" ⚠️ Gleichheit und Zuweisung")]),e._v(" "),a("p",[e._v("Die Gleichheit wird durch zwei aufeinanderfolgende Gleichheitszeichen "),a("code",[e._v("==")]),e._v(" dargestellt. Ein einzelnes Gleichheitszeichen "),a("code",[e._v("=")]),e._v(" wird für die Zuweisung eines Werts an eine Variable verwendet.\n:::")]),e._v(" "),a("p",[e._v("Die folgende Anweisung bestimmt den Wahrheitswert der Aussage «Der Wert der Variable "),a("code",[e._v("x")]),e._v(" ist grösser als 5» und speichert den Wahrheitswert in der Variable "),a("code",[e._v("q")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[e._v("q "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("::: box warning")]),e._v(" "),a("h4",{attrs:{id:"gleichheit-bei-gleitkommazahlen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gleichheit-bei-gleitkommazahlen"}},[e._v("#")]),e._v(" ⚠️ Gleichheit bei Gleitkommazahlen")]),e._v(" "),a("p",[e._v("Beim Vergleichen von Gleitkommazahlen ist zu beachten, dass sich diese nicht wie rationale Zahlen verhalten. Beispielsweise ist die Summe von "),a("code",[e._v("0.1")]),e._v(" und "),a("code",[e._v("0.2")]),e._v(" nicht gleich "),a("code",[e._v("0.3")]),e._v(". Deshalb sollten Gleitkommazahlen nie auf (Un-)Gleichheit getestet werden. Anstelle von $a = b$ überprüft man, ob $|a - b|$ sehr klein ist:")]),e._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[e._v("q "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.1")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.2")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.3")]),e._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# t: False")]),e._v("\nr "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("abs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.1")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.2")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1e")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# u: True")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v(":::")]),e._v(" "),a("p",[e._v("Mit diesen Operationen kann auch Text verglichen werden. Dabei werden die Zeichen beider Texte von links nach rechts verglichen. Für den Vergleich einzelner Zeichen wird deren Position in Unicode verwendet.")]),e._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[e._v("q "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Lovelace"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Babbage"')]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# q: True")]),e._v("\nr "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"A"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"a"')]),e._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# r: False")]),e._v("\ns "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"iu"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"äuä"')]),e._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# s: True")]),e._v("\nt "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Simon"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Simone"')]),e._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# t: True")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h2",{attrs:{id:"operationen-mit-wahrheitswerten"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operationen-mit-wahrheitswerten"}},[e._v("#")]),e._v(" Operationen mit Wahrheitswerten")]),e._v(" "),a("p",[e._v("Wahrheitswerte können mit "),a("strong",[e._v("boolschen Operationen")]),e._v(" verknüpft werden. Python kennt die boolschen Operationen «Und», «Oder» und «Nicht».")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Operation")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Fachbegriff")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Mathematisch")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Python")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Oder")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Disjunktion")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("$q\\lor r$")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("q or r")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Und")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Konjunktion")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("$q\\land r$")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("q and r")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Nicht")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Negation")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("$\\lnot q$")]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("not q")])])])])]),e._v(" "),a("h3",{attrs:{id:"und"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#und"}},[e._v("#")]),e._v(" Und")]),e._v(" "),a("p",[e._v("Der Ausdruck "),a("code",[e._v("q and r")]),e._v(" ist genau dann "),a("code",[e._v("True")]),e._v(", wenn beide Werte "),a("code",[e._v("True")]),e._v(" sind.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[a("code",[e._v("q")])]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[a("code",[e._v("r")])]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[a("code",[e._v("q and r")])])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])])])])]),e._v(" "),a("h3",{attrs:{id:"oder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oder"}},[e._v("#")]),e._v(" Oder")]),e._v(" "),a("p",[e._v("Der Ausdruck "),a("code",[e._v("q or r")]),e._v(" ist genau dann "),a("code",[e._v("True")]),e._v(", wenn mindestens einer der Werte "),a("code",[e._v("True")]),e._v(" ist.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[a("code",[e._v("q")])]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[a("code",[e._v("r")])]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[a("code",[e._v("q or r")])])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])])])])]),e._v(" "),a("h3",{attrs:{id:"nicht"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nicht"}},[e._v("#")]),e._v(" Nicht")]),e._v(" "),a("p",[e._v("Der Ausdruck "),a("code",[e._v("not q")]),e._v(" ist genau dann "),a("code",[e._v("True")]),e._v(", wenn "),a("code",[e._v("q")]),e._v(" den Wert "),a("code",[e._v("False")]),e._v(" hat.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[a("code",[e._v("q")])]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[a("code",[e._v("not q")])])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("True")])]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v("False")])])])])]),e._v(" "),a("h2",{attrs:{id:"automatische-wahrheitswerte"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automatische-wahrheitswerte"}},[e._v("#")]),e._v(" Automatische Wahrheitswerte")]),e._v(" "),a("p",[e._v("Python ordnet jedem beliebigen Wert automatisch ein Wahrheitswert zu. Dabei erhalten die folgenden Werte den Wahrheitswert "),a("code",{staticClass:"python"},[e._v("False")]),e._v(":")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("None")])]),e._v(" "),a("li",[a("code",[e._v("False")])]),e._v(" "),a("li",[e._v("Die Zahl Null von jedem Zahlentyp, beispielsweise "),a("code",[e._v("0")]),e._v(" (Typ "),a("code",[e._v("int")]),e._v("), "),a("code",[e._v("0.0")]),e._v(" (Typ "),a("code",[e._v("float")]),e._v("), "),a("code",[e._v("0j")]),e._v(" (Typ "),a("code",[e._v("complex")]),e._v(")")]),e._v(" "),a("li",[e._v("Eine leere Sequenz, beispielsweise die leere Zeichenkette "),a("code",[e._v('""')]),e._v(", das leere Tupel "),a("code",[e._v("()")]),e._v(" oder die leere Liste "),a("code",[e._v("[]")]),e._v(".")]),e._v(" "),a("li",[e._v("Eine leere Menge "),a("code",[e._v("{}")]),e._v(".")])]),e._v(" "),a("p",[e._v("Allen anderen Werten wird der Wahrheitswert "),a("code",[e._v("True")]),e._v(" zugeordnet.")])])}),[],!1,null,null,null);t.default=s.exports}}]);